// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Event struct {
	ID          string    `json:"id"`
	Description string    `json:"description"`
	Connection  *Pairwise `json:"connection"`
}

type EventConnection struct {
	Edges      []*EventEdge `json:"edges"`
	Nodes      []*Event     `json:"nodes"`
	PageInfo   *PageInfo    `json:"pageInfo"`
	TotalCount int          `json:"totalCount"`
}

type EventEdge struct {
	Cursor string `json:"cursor"`
	Node   *Event `json:"node"`
}

type Invitation struct {
	Payload string `json:"payload"`
}

type Offer struct {
	ID     string `json:"id"`
	Accept bool   `json:"accept"`
}

type PageInfo struct {
	EndCursor       *string `json:"endCursor"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
}

type Pairwise struct {
	ID            string `json:"id"`
	OurDid        string `json:"ourDid"`
	TheirDid      string `json:"theirDid"`
	TheirEndpoint string `json:"theirEndpoint"`
	TheirLabel    string `json:"theirLabel"`
	CreatedMs     string `json:"createdMs"`
	ApprovedMs    string `json:"approvedMs"`
	InitiatedByUs bool   `json:"initiatedByUs"`
}

type PairwiseConnection struct {
	Edges      []*PairwiseEdge `json:"edges"`
	Nodes      []*Pairwise     `json:"nodes"`
	PageInfo   *PageInfo       `json:"pageInfo"`
	TotalCount int             `json:"totalCount"`
}

type PairwiseEdge struct {
	Cursor string    `json:"cursor"`
	Node   *Pairwise `json:"node"`
}

type Request struct {
	ID     string `json:"id"`
	Accept bool   `json:"accept"`
}

type Response struct {
	Ok bool `json:"ok"`
}
